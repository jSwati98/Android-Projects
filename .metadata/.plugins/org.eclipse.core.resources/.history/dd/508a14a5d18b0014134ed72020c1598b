package com.android.app;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Locale;

import com.authorwjf.talk2me.R;

import android.app.Activity;
import android.content.Intent;
import android.content.res.Resources;
import android.net.Uri;
import android.os.Bundle;
import android.speech.RecognizerIntent;
import android.speech.tts.TextToSpeech;
import android.speech.tts.TextToSpeech.OnUtteranceCompletedListener;
import android.speech.tts.UtteranceProgressListener;
import android.text.Html;
import android.text.method.ScrollingMovementMethod;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends Activity {

	protected static final int REQUEST_OK = 1;
	ArrayList<String> a = new ArrayList<String>();
	ArrayList<String> b = new ArrayList<String>();
	ArrayList bst;
	String instrText;
	static BST bstObj = new BST();
	static MainActivity activityM;
	TextToSpeech startTObj;
	TextToSpeech sayTObj;
	boolean startFlag = false;
	HashMap<String, String> map = new HashMap<String, String>();
	com.android.app.BST.Node current;
	public static MainActivity getInstance() {
		return activityM;
	}

	/*private String readRawTextFile(int id) {
		InputStream inputStream = getApplicationContext().getResources().openRawResource(id);
		InputStreamReader in = new InputStreamReader(inputStream);
		BufferedReader buf = new BufferedReader(in);
		String line;
		StringBuilder text = new StringBuilder();
		try {
			while (( line = buf.readLine()) != null) 
				text.append(line);
		} catch (IOException e) {
			return null;
		}
		return text.toString();
	}*/
	@Override
	protected void onCreate(Bundle savedInstanceState) {

		super.onCreate(savedInstanceState);
		activityM = this;
		//setContentView(R.layout.activity_main);
		setContentView(R.layout.activity_main);
		/* TextView instr = (TextView) findViewById (R.id.instr);

		 instr.setText(Html.fromHtml(getString(R.string.instr_html)));*/
		 //instr.setMovementMethod(new ScrollingMovementMethod());
		// instrText = (String) instr.getText();

		/*Resources res = getResources();
		BufferedReader reader = new BufferedReader(new InputStreamReader(
				res.openRawResource(R.raw.file)));
		try {

			System.out.println("in----------------" + reader);
			String str, str1;
			while ((str = reader.readLine()) != null) {
				a.add(str);

			}

			System.out.println("a--->" + a);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}*/
		
		//startTObj = new TextToSpeech(getApplicationContext(), new TextToSpeech.OnInitListener() {
			/*
			@Override
			public void onInit(int status) {
				if (status != TextToSpeech.ERROR) {
					System.out.println("In object creation");
					startTObj.setLanguage(Locale.UK);
					map.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID,
							"UniqueID");
					startTObj.speak("Welcome to Prescription guide. we will ask you a series of questions.  Valid input answers are yes, no and skip. To start medical test, say Start.", TextToSpeech.QUEUE_FLUSH, map);
					startTObj.setOnUtteranceProgressListener(new UtteranceProgressListener() {

						@Override
						public void onDone(String utteranceId) {
							// TODO Auto-generated method stub
							System.out.println("uttereance complete!!!");
							Intent i = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
							i.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, "en-US");
							try {
								startFlag= true;
								startActivityForResult(i, REQUEST_OK);
							} catch (Exception e) {
							//	System.out.println("Exception"+e.printStackTrace());
							}
							

						}

						@Override
						public void onError(String arg0) {
							// TODO Auto-generated method stub
							System.out.println("errror-->");
						}

						@Override
						public void onStart(String arg0) {
							System.out.println("start-->");
							// TODO Auto-generated method stub

						}
					});
				}
			}
		*/
		//});

		/*final Button startButton = (Button) findViewById(R.id.startButton);
		startButton.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				onStartApp();
			}
		});
*/
		
	}

	/*public void onStartApp(){

		System.out.println("in button click!!!");
		try {
			BST.getTree(a, getApplicationContext());
			Intent nextScreen = new Intent(getApplicationContext(), TestActivity.class);
			 
            //Sending data to another Activity
            
            startActivity(nextScreen);
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	
	}*//*
	public void startRecognition(com.android.prescriptionGuide.BST.Node r) {

		Intent i = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
		i.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, "en-US");
		try {
			this.current = r;
			startActivityForResult(i, REQUEST_OK);
			System.out.println("777777777");
		} catch (Exception e) {
			Toast.makeText(this, "Error initializing speech to text engine.",
					Toast.LENGTH_LONG).show();
		}

	}

	TextToSpeech ttobj;

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
		if (requestCode == REQUEST_OK && resultCode == RESULT_OK) {
			ArrayList<String> thingsYouSaid = data
					.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
			System.out.println("thingsYouSaid ----->"+thingsYouSaid.toString());
			String spokenData = thingsYouSaid.get(0);
			System.out.println("You said-->" + spokenData);

			try {
				System.out.println("data-->" + spokenData);
				if(startFlag){
					startFlag = false;
					if(spokenData.equalsIgnoreCase("start")){
						onStartApp();
					}else{
					 sayTObj = new TextToSpeech(getApplicationContext(), new TextToSpeech.OnInitListener() {
							@Override
							public void onInit(int status) {
								if (status != TextToSpeech.ERROR) {
									System.out.println("In object creation");
									sayTObj.setLanguage(Locale.UK);
									map.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID,
											"UniqueID");
									sayTObj.speak("This is not a valid input. Please say start to take medical test.", TextToSpeech.QUEUE_FLUSH, map);
									sayTObj.setOnUtteranceProgressListener(new UtteranceProgressListener() {

										@Override
										public void onDone(String utteranceId) {
											// TODO Auto-generated method stub
											System.out.println("uttereance complete!!!");
											Intent i = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
											i.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, "en-US");
											try {
												startFlag= true;
												startActivityForResult(i, REQUEST_OK);
												System.out.println("777777777");
											} catch (Exception e) {
											//	System.out.println("Exception"+e.printStackTrace());
											}
											

										}

										@Override
										public void onError(String arg0) {
											// TODO Auto-generated method stub
											System.out.println("errror-->");
										}

										@Override
										public void onStart(String arg0) {
											System.out.println("start-->");
											// TODO Auto-generated method stub

										}
									});
								}
							}
						});
					}
				}else
				bstObj.navigate(spokenData, this.current);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
	}*/

	
}

